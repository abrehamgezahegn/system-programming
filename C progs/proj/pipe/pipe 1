int filedes[2];
if (pipe(filedes) == -1)
errExit("pipe"); /* Create the pipe */
switch (fork()) {
case -1:
errExit("fork"); /* Create a child process */
case 0: /* Child */
if (close(filedes[1]) == -1)
errExit("close");
/* Close unused write end */
/* Child now reads from pipe */
break;
default: /* Parent */
if (close(filedes[0]) == -1)
errExit("close");
/* Close unused read end */
/* Parent now writes to pipe */
break;
}
